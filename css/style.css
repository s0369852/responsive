@charset "utf-8";

/* 컨테이너 */
.container {
    margin: 0 auto;
    width: 1200px;
    /* background: rgba(0,0,0,.3); */
}

/* 레이아웃 */
#header {background: url(../img/header_bg.jpg) repeat-x center top;}
#nav {background-color: #f6fdff;}

/* 헤더 메뉴 */
.header {height: 327px;}
.header .header_menu {text-align: right;}
.header .header_menu a {
    display:inline-block;
    padding: 8px 0 6px 10px;
    font-family: 'Abel', sans-serif;
    color: #ffffff;
    transition: color 0.3s ease;
    -webkit-transition: color 0.3s ease;
    -moz-transition: color 0.3s ease;
    -ms-transition: color 0.3s ease;
    -o-transition: color 0.3s ease;
    /*CSS3에서주로사용되는기능은trasition.transition: color 0.3s ease;
    =>color값을0.3초동안ease효과를사용하여바꿔라.*/
}
 /* inline구조에서는 상하값이 안먹힌다.(margin, padding) -> display: inline-block; */
.header .header_menu a:hover {color: #ccc;}

/* 헤더 타이틀 */
.header_title {
    margin-top: 55px;
    text-align: center;
    font-family: 'Abel', sans-serif;
}
.header_title h1 {
    padding: 5px 30px 5px 30px;
    display: inline-block;
    font-size: 30px;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: 900;
    color: #ffffff;
    background: #51b0dc;
    transition: box-shadow 0.3s ease-in-out;
    -webkit-transition: box-shadow 0.3s ease-in-out;
    -moz-transition: box-shadow 0.3s ease-in-out;
    -ms-transition: box-shadow 0.3s ease-in-out;
    -o-transition: box-shadow 0.3s ease-in-out;
    /*transition은 ":hover"가 아닌 원본에다가 효과를 준다.*/
    /*transition: transition-property | transition-duration | transition-timing-function | transition-delay */    
    /*         
    transition-property => transition의 적용 여부를 정의. (적용 하고자 하는 속성값)
    transition-duration => 요소의 움직임의 지속시간을 정의.        
    transition-timing-function => 요소의 움직임 기능을 정의.         
    transition-delay => 요소의 움직임의 시간을 지연시킨다.     
    */
}
.header_title h1:hover {
    box-shadow:
        inset -9em 0 0 0 #257fac,
        inset 9em 0 0 0 #257fac
        /* box-shadow : none | h-shadow(수평) | v-shadow(수직) | blur | spread | color | inset */
        /* inset => 내부 그림자 생성. "%"단위는 먹지 않는다. 반응형이기 때문에 em,rem 등의 상대적인 단위로 나타내준다. */
        /* 반응형에서 가장 중요한 것은 상대적인 단위로 표현하는 것이다. px보다는 %나, em, rem 등. */
}
/* css3부터는 속성을 2개 이상 주고 싶으면 ","를 이용해서 작업할 수 있다. */
.header_title a {
    margin-top: -7px;
    padding: 10px 20px 10px 20px;
    display: inline-block;
    font-size: 16px;
    color: #ffffff;
    background: #4a9abf;
    transition: box-shadow 0.5s ease-in-out;
    -webkit-transition: box-shadow 0.5s ease-in-out;
    -moz-transition: box-shadow 0.5s ease-in-out;
    -ms-transition: box-shadow 0.5s ease-in-out;
    -o-transition: box-shadow 0.5s ease-in-out;
}
.header_title a:hover {
    box-shadow:
    0 0 0 5px rgba(75,154,191,.9) inset,
    0 0 0 100px rgba(0,0,0,.1) inset
    /* inset은 앞에다가 쓸 수도 있고, 뒤에다가 쓸 수도 있다. */
}

/* 헤더 아이콘 */
.header .header_icon {
    margin-top: 40px;
    padding-bottom: 45px;
    text-align: center;
}
.header .header_icon ul li {
    margin: 0 2px; 
    display: inline;
}
.header .header_icon ul li a {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 60px;
    font-size: 35px;
    line-height: 60px;
    color: #ffffff;
    background: #3192bf;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    transition: all 0.3s ease;
    -webkit-transition: all 0.3s ease;
    -moz-transition: all 0.3s ease;
    -ms-transition: all 0.3s ease;
    -o-transition: all 0.3s ease;
}
.header .header_icon ul li a:hover {
    font-size: 36px;
    box-shadow: 
        0 0 0 3px rgba(75,154,191,.9) inset,
        0 0 0 100px rgba(0,0,0,.1) inset;
}
.header .header_icon ul li a span {
    opacity: 0;
    padding: 4px 9px;
    position: absolute;
    top: -45px;
    left: 50%;
    font-size: 12px;
    line-height: 1.6;
    background: #3192bf;
    border-radius: 6px 0;
    transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transition: all 0.5s ease;
    -webkit-transition: all 0.5s ease;
    -moz-transition: all 0.5s ease;
    -ms-transition: all 0.5s ease;
    -o-transition: all 0.5s ease;
}
/* transform으로 가운데 정렬 하는 방법.
    => x축(left, right)과 y(top, bottom)축을 기준으로, 움직인 위치와 반대로(음수값) 적용하면 된다. */
.header .header_icon ul li a span::before {
    content: '';
    position: absolute;
    left: 50%;
    bottom: -5px;
    margin-left: -5px;
    /* border값으로 삼각형을 만들어 줬는데 5px로 만들었으니까 다시 -5px을 줘서 중간으로 자리를 움직이게 한다. */
    border-top: 5px solid #3192bf;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
}
.header .header_icon ul li a:hover span{
    opacity: 1;
    top: -35px;
}

/* 전체 메뉴 */
.nav {
    overflow: hidden;
    padding: 25px 0;
}
.nav h3 {
    margin-bottom: 4px;
    font-size: 18px;
    font-weight: bold;
    color: #25a2d0;
}
.nav > div {
    float: left;
    width: 40%;
}
.nav .nav_right {width: 20%;}
/* = .nav > div:last-child {width: 20%;} */
.nav ol {overflow: hidden;}

.nav ol li {
    position: relative;
    float: left;
    padding-left: 8px; 
    width: 50%;
    box-sizing: border-box;
}
.nav ol li::before {
    content: '';
    position: absolute;
    top: 8px;
    left: 0;
    width: 3px;
    height: 3px;
    background-color: #25a2d0;
    border-radius: 50%;
    -webkit-border-radius:;
    -moz-border-radius:;
    -ms-border-radius:;
    -o-border-radius:;
}
.nav .nav_right li {width: 100%;}
/* = .nav > div:last-child li {width: 100%;} */
.nav ol li a {}


/* 미디어 쿼리 */
@media (max-width: 1220px) {
    .container {width: 100%;}
    .row {padding: 0 15px;}
}











